version: '3.8'

services:
  # Frontend - React served by Nginx
  clockit-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - clockit-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # Backend - FastAPI application
  clockit-backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "8000:8000"
    environment:
      - CLOCKIT_DATA_DIR=/app/data
      - PYTHONPATH=/app
      - DATABASE_TYPE=postgres
      - POSTGRES_HOST=clockit-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=clockit
      - POSTGRES_USER=clockit
      - POSTGRES_PASSWORD=clockit_password
    depends_on:
      - clockit-db
    volumes:
      - clockit_data:/app/data
      - clockit_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # PostgreSQL database for cloud storage option
  clockit-db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=clockit
      - POSTGRES_USER=clockit
      - POSTGRES_PASSWORD=clockit_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432" # Expose for development/debugging only
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clockit -d clockit"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

volumes:
  clockit_data:
    driver: local
  clockit_logs:
    driver: local
  postgres_data:
    driver: local
  clockit_logs:
    driver: local
  postgres_data:
    driver: local