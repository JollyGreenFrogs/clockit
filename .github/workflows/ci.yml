name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Run tests
        env:
          DEV_MODE: sqlite
          ENVIRONMENT: test
          SECRET_KEY: test-secret-key-for-ci-only-32-chars-long
          ENABLE_RATE_LIMITING: false
        run: |
          . .venv/bin/activate
          PYTHONPATH=${{ github.workspace }} .venv/bin/pytest -q --tb=no -x

      - name: Run linters
        run: |
          . .venv/bin/activate
          pip install black isort flake8
          black --check .
          isort --check-only .
          flake8

  test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./react-frontend
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: react-frontend/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run component tests
        run: npm run test:run

      - name: Build frontend
        run: npm run build

  test-e2e:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: react-frontend/package-lock.json

      - name: Install Python dependencies
        run: |
          python -m venv .venv
          . .venv/bin/activate
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt

      - name: Install Node dependencies
        run: |
          cd react-frontend
          npm ci

      - name: Install Playwright browsers
        run: |
          cd react-frontend
          npx playwright install --with-deps

      - name: Start backend server
        run: |
          . .venv/bin/activate
          PYTHONPATH=${{ github.workspace }} python -m src.main &
          # Wait for backend to start
          sleep 15
        env:
          DEV_MODE: sqlite
          ENVIRONMENT: test
          SECRET_KEY: test-secret-key-for-ci-only-32-chars-long
          ENABLE_RATE_LIMITING: false
          HOST: "0.0.0.0"
          PORT: 8001

      - name: Verify backend is running
        run: |
          # Check if backend is accessible
          curl -f http://localhost:8001/health || (echo "Backend health check failed" && exit 1)
          curl -f http://localhost:8001/version || (echo "Backend version check failed" && exit 1)

      - name: Run E2E tests
        run: |
          cd react-frontend
          npm run test:e2e
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: react-frontend/playwright-report/
          retention-days: 30
